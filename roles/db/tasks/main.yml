- name: "PostgreSQL Setup"
  vars_files:
    - vars/vars.yml

  handlers:
    - name: Restart postgresql
      ansible.builtin.systemd:
        name: postgresql
        state: restarted

  tasks:
    - name: Install PostgreSQL and psycopg2
      ansible.builtin.dnf:
        name: postgresql-server,postgresql-contrib,python3-psycopg2
        state: present
        update_cache: true

    - name: Create the cluster
      ansible.builtin.command:
        cmd: postgresql-setup --initdb
        creates: /var/lib/pgsql/data/PG_VERSION

    - name: Start and enable the service
      ansible.builtin.systemd:
        name: postgresql
        state: started
        enabled: true

    - name: Set options
      community.postgresql.postgresql_set:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
      become: true
      become_user: postgres
      with_items: "{{ postgresql_options }}"
      notify:
        - Restart postgresql

    - name: Create the databases
      community.postgresql.postgresql_db:
        name: "{{ postgresql.db.name }}"
        encoding: "UTF-8"
      become: true
      become_user: postgres

    - name: Create the users
      community.postgresql.postgresql_user:
        db: "{{ item.db }}"
        name: "{{ item.name }}"
        password: "{{ item.password | default(omit) }}"
      become: true
      become_user: postgres
      environment:
        PGOPTIONS: "-c password_encryption=scram-sha-256"
      with_items: "{{ postgresql_users }}"

    - name: Create the schemas
      community.postgresql.postgresql_schema:
        db: "{{ item.db }}"
        name: "{{ item.name }}"
        owner: "{{ item.name }}"
      become: true
      become_user: postgres
      with_items: "{{ postgresql_schemas }}"
